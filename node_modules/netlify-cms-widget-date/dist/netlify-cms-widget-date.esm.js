import React from 'react';
import PropTypes from 'prop-types';
import { injectGlobal } from 'react-emotion';
import DateTime from 'react-datetime';
import dateTimeStyles from 'react-datetime/css/react-datetime.css';
import moment from 'moment';
import { WidgetPreviewContainer } from 'netlify-cms-ui-default';

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

injectGlobal(dateTimeStyles, "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRhdGVDb250cm9sLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9ZIiwiZmlsZSI6IkRhdGVDb250cm9sLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBpbmplY3RHbG9iYWwgfSBmcm9tICdyZWFjdC1lbW90aW9uJztcbmltcG9ydCBEYXRlVGltZSBmcm9tICdyZWFjdC1kYXRldGltZSc7XG5pbXBvcnQgZGF0ZVRpbWVTdHlsZXMgZnJvbSAncmVhY3QtZGF0ZXRpbWUvY3NzL3JlYWN0LWRhdGV0aW1lLmNzcyc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XG5cbmluamVjdEdsb2JhbGBcbiAgJHtkYXRlVGltZVN0eWxlc31cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERhdGVDb250cm9sIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBmaWVsZDogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIG9uQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIGNsYXNzTmFtZVdyYXBwZXI6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICBzZXRBY3RpdmVTdHlsZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICBzZXRJbmFjdGl2ZVN0eWxlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIHZhbHVlOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuc3RyaW5nXSksXG4gICAgaW5jbHVkZVRpbWU6IFByb3BUeXBlcy5ib29sLFxuICB9O1xuXG4gIGZvcm1hdCA9IHRoaXMucHJvcHMuZmllbGQuZ2V0KCdmb3JtYXQnKTtcblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBjb25zdCB7IHZhbHVlIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBjdXJyZW50IGRhdGUgYXMgZGVmYXVsdCB2YWx1ZSBpZiBubyBkZWZhdWx0IHZhbHVlIGlzIHByb3ZpZGVkLiBBblxuICAgICAqIGVtcHR5IHN0cmluZyBtZWFucyB0aGUgdmFsdWUgaXMgaW50ZW50aW9uYWxseSBibGFuay5cbiAgICAgKi9cbiAgICBpZiAoIXZhbHVlICYmIHZhbHVlICE9PSAnJykge1xuICAgICAgdGhpcy5oYW5kbGVDaGFuZ2UobmV3IERhdGUoKSk7XG4gICAgfVxuICB9XG5cbiAgLy8gRGF0ZSBpcyB2YWxpZCBpZiBkYXRldGltZSBpcyBhIG1vbWVudCBvciBEYXRlIG9iamVjdCBvdGhlcndpc2UgaXQncyBhIHN0cmluZy5cbiAgLy8gSGFuZGxlIHRoZSBlbXB0eSBjYXNlLCBpZiB0aGUgdXNlciB3YW50cyB0byBlbXB0eSB0aGUgZmllbGQuXG4gIGlzVmFsaWREYXRlID0gZGF0ZXRpbWUgPT5cbiAgICBtb21lbnQuaXNNb21lbnQoZGF0ZXRpbWUpIHx8IGRhdGV0aW1lIGluc3RhbmNlb2YgRGF0ZSB8fCBkYXRldGltZSA9PT0gJyc7XG5cbiAgaGFuZGxlQ2hhbmdlID0gZGF0ZXRpbWUgPT4ge1xuICAgIGNvbnN0IHsgb25DaGFuZ2UgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIGRhdGUgb25seSBpZiBpdCBpcyB2YWxpZC5cbiAgICAgKi9cbiAgICBpZiAoIXRoaXMuaXNWYWxpZERhdGUoZGF0ZXRpbWUpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUHJvZHVjZSBhIGZvcm1hdHRlZCBzdHJpbmcgb25seSBpZiBhIGZvcm1hdCBpcyBzZXQgaW4gdGhlIGNvbmZpZy5cbiAgICAgKiBPdGhlcndpc2UgcHJvZHVjZSBhIGRhdGUgb2JqZWN0LlxuICAgICAqL1xuICAgIGlmICh0aGlzLmZvcm1hdCkge1xuICAgICAgY29uc3QgZm9ybWF0dGVkVmFsdWUgPSBtb21lbnQoZGF0ZXRpbWUpLmZvcm1hdCh0aGlzLmZvcm1hdCk7XG4gICAgICBvbkNoYW5nZShmb3JtYXR0ZWRWYWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IHZhbHVlID0gbW9tZW50LmlzTW9tZW50KGRhdGV0aW1lKSA/IGRhdGV0aW1lLnRvRGF0ZSgpIDogZGF0ZXRpbWU7XG4gICAgICBvbkNoYW5nZSh2YWx1ZSk7XG4gICAgfVxuICB9O1xuXG4gIG9uQmx1ciA9IGRhdGV0aW1lID0+IHtcbiAgICBjb25zdCB7IHNldEluYWN0aXZlU3R5bGUgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBpZiAoIXRoaXMuaXNWYWxpZERhdGUoZGF0ZXRpbWUpKSB7XG4gICAgICBjb25zdCBwYXJzZWREYXRlID0gbW9tZW50KGRhdGV0aW1lKTtcblxuICAgICAgaWYgKHBhcnNlZERhdGUuaXNWYWxpZCgpKSB7XG4gICAgICAgIHRoaXMuaGFuZGxlQ2hhbmdlKGRhdGV0aW1lKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdpbmRvdy5hbGVydCgnVGhlIGRhdGUgeW91IGVudGVyZWQgaXMgaW52YWxpZC4nKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBzZXRJbmFjdGl2ZVN0eWxlKCk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgaW5jbHVkZVRpbWUsIHZhbHVlLCBjbGFzc05hbWVXcmFwcGVyLCBzZXRBY3RpdmVTdHlsZSB9ID0gdGhpcy5wcm9wcztcbiAgICByZXR1cm4gKFxuICAgICAgPERhdGVUaW1lXG4gICAgICAgIHRpbWVGb3JtYXQ9eyEhaW5jbHVkZVRpbWV9XG4gICAgICAgIHZhbHVlPXttb21lbnQodmFsdWUsIHRoaXMuZm9ybWF0KX1cbiAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlfVxuICAgICAgICBvbkZvY3VzPXtzZXRBY3RpdmVTdHlsZX1cbiAgICAgICAgb25CbHVyPXt0aGlzLm9uQmx1cn1cbiAgICAgICAgaW5wdXRQcm9wcz17eyBjbGFzc05hbWU6IGNsYXNzTmFtZVdyYXBwZXIgfX1cbiAgICAgIC8+XG4gICAgKTtcbiAgfVxufVxuIl19 */");
class DateControl extends React.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "format", this.props.field.get('format'));

    _defineProperty(this, "isValidDate", datetime => moment.isMoment(datetime) || datetime instanceof Date || datetime === '');

    _defineProperty(this, "handleChange", datetime => {
      const onChange = this.props.onChange;
      /**
       * Set the date only if it is valid.
       */

      if (!this.isValidDate(datetime)) {
        return;
      }
      /**
       * Produce a formatted string only if a format is set in the config.
       * Otherwise produce a date object.
       */


      if (this.format) {
        const formattedValue = moment(datetime).format(this.format);
        onChange(formattedValue);
      } else {
        const value = moment.isMoment(datetime) ? datetime.toDate() : datetime;
        onChange(value);
      }
    });

    _defineProperty(this, "onBlur", datetime => {
      const setInactiveStyle = this.props.setInactiveStyle;

      if (!this.isValidDate(datetime)) {
        const parsedDate = moment(datetime);

        if (parsedDate.isValid()) {
          this.handleChange(datetime);
        } else {
          window.alert('The date you entered is invalid.');
        }
      }

      setInactiveStyle();
    });
  }

  componentDidMount() {
    const value = this.props.value;
    /**
     * Set the current date as default value if no default value is provided. An
     * empty string means the value is intentionally blank.
     */

    if (!value && value !== '') {
      this.handleChange(new Date());
    }
  } // Date is valid if datetime is a moment or Date object otherwise it's a string.
  // Handle the empty case, if the user wants to empty the field.


  render() {
    const _this$props = this.props,
          includeTime = _this$props.includeTime,
          value = _this$props.value,
          classNameWrapper = _this$props.classNameWrapper,
          setActiveStyle = _this$props.setActiveStyle;
    return React.createElement(DateTime, {
      timeFormat: !!includeTime,
      value: moment(value, this.format),
      onChange: this.handleChange,
      onFocus: setActiveStyle,
      onBlur: this.onBlur,
      inputProps: {
        className: classNameWrapper
      }
    });
  }

}

_defineProperty(DateControl, "propTypes", {
  field: PropTypes.object.isRequired,
  onChange: PropTypes.func.isRequired,
  classNameWrapper: PropTypes.string.isRequired,
  setActiveStyle: PropTypes.func.isRequired,
  setInactiveStyle: PropTypes.func.isRequired,
  value: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),
  includeTime: PropTypes.bool
});

const DatePreview = ({
  value
}) => React.createElement(WidgetPreviewContainer, null, value ? value.toString() : null);

DatePreview.propTypes = {
  value: PropTypes.object
};

export { DateControl, DatePreview };
