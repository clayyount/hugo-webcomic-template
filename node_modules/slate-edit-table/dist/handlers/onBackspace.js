'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

require('slate');

var _changes = require('../changes');

function onBackspace(event, change, editor, opts) {
    var value = change.value;
    var startBlock = value.startBlock,
        startOffset = value.startOffset,
        isCollapsed = value.isCollapsed,
        endBlock = value.endBlock;

    // If a cursor is collapsed at the start of the block, do nothing

    if (startOffset === 0 && isCollapsed) {
        event.preventDefault();
        return change;
    }

    // If "normal" deletion, we continue
    if (startBlock === endBlock) {
        return undefined;
    }

    // If cursor is between multiple blocks,
    // we clear the content of the cells
    event.preventDefault();

    var blocks = value.blocks,
        document = value.document;

    var getAncestorCell = function getAncestorCell(node) {
        return node.type === opts.typeCell ? node : document.getClosest(node.key, function (a) {
            return a.type === opts.typeCell;
        });
    };
    var cells = blocks.map(getAncestorCell).toSet();
    cells.forEach(function (cell) {
        return (0, _changes.clearCell)(opts, change, cell);
    });

    // Clear selected cells
    return change.collapseToStartOf(startBlock);
}

exports.default = onBackspace;