"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _capitalize2 = _interopRequireDefault(require("lodash/capitalize"));

var _partial2 = _interopRequireDefault(require("lodash/partial"));

var _react = _interopRequireDefault(require("react"));

var _immutable = require("immutable");

var _core = require("@emotion/core");

var _netlifyCmsUiDefault = require("netlify-cms-ui-default");

var _index = require("./index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const ShortcodeContainer = (0, _styledBase.default)("div", {
  target: "e1994u070",
  label: "ShortcodeContainer"
})(_netlifyCmsUiDefault.components.objectWidgetTopBarContainer, ";border-radius:", _netlifyCmsUiDefault.lengths.borderRadius, ";border:2px solid ", _netlifyCmsUiDefault.colors.textFieldBorder, ";margin:12px 0;padding:14px;", props => props.collapsed &&
/*#__PURE__*/
(0, _core.css)("background-color:", _netlifyCmsUiDefault.colors.textFieldBorder, ";cursor:pointer;label:ShortcodeContainer;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9NYXJrZG93bkNvbnRyb2wvU2hvcnRjb2RlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1CTyIsImZpbGUiOiIuLi8uLi8uLi9zcmMvTWFya2Rvd25Db250cm9sL1Nob3J0Y29kZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIHJlYWN0L3Byb3AtdHlwZXMgKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IE1hcCB9IGZyb20gJ2ltbXV0YWJsZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCB7IHBhcnRpYWwsIGNhcGl0YWxpemUgfSBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgTGlzdEl0ZW1Ub3BCYXIsIGNvbXBvbmVudHMsIGNvbG9ycywgbGVuZ3RocyB9IGZyb20gJ25ldGxpZnktY21zLXVpLWRlZmF1bHQnO1xuaW1wb3J0IHsgZ2V0RWRpdG9yQ29udHJvbCwgZ2V0RWRpdG9yQ29tcG9uZW50cyB9IGZyb20gJy4vaW5kZXgnO1xuXG5jb25zdCBTaG9ydGNvZGVDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAke2NvbXBvbmVudHMub2JqZWN0V2lkZ2V0VG9wQmFyQ29udGFpbmVyfTtcbiAgYm9yZGVyLXJhZGl1czogJHtsZW5ndGhzLmJvcmRlclJhZGl1c307XG4gIGJvcmRlcjogMnB4IHNvbGlkICR7Y29sb3JzLnRleHRGaWVsZEJvcmRlcn07XG4gIG1hcmdpbjogMTJweCAwO1xuICBwYWRkaW5nOiAxNHB4O1xuXG4gICR7cHJvcHMgPT5cbiAgICBwcm9wcy5jb2xsYXBzZWQgJiZcbiAgICBjc3NgXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy50ZXh0RmllbGRCb3JkZXJ9O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGB9O1xuYDtcblxuY29uc3QgU2hvcnRjb2RlVG9wQmFyID0gc3R5bGVkKExpc3RJdGVtVG9wQmFyKWBcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMudGV4dEZpZWxkQm9yZGVyfTtcbiAgbWFyZ2luOiAtMTRweCAtMTRweCAwO1xuICBib3JkZXItcmFkaXVzOiAwO1xuYDtcblxuY29uc3QgU2hvcnRjb2RlVGl0bGUgPSBzdHlsZWQuZGl2YFxuICBwYWRkaW5nOiA4cHg7XG4gIGNvbG9yOiAke2NvbG9ycy5jb250cm9sTGFiZWx9O1xuYDtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2hvcnRjb2RlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIC8qKlxuICAgICAgICogVGhlIGBzaG9ydGNvZGVOZXdgIHByb3AgaXMgc2V0IHRvIGB0cnVlYCB3aGVuIGNyZWF0aW5nIGEgbmV3IFNob3J0Y29kZSxcbiAgICAgICAqIHNvIHRoYXQgdGhlIGZvcm0gaXMgaW1tZWRpYXRlbHkgb3BlbiBmb3IgZWRpdGluZy4gT3RoZXJ3aXNlIGFsbFxuICAgICAgICogc2hvcnRjb2RlcyBhcmUgY29sbGFwc2VkIGJ5IGRlZmF1bHQuXG4gICAgICAgKi9cbiAgICAgIGNvbGxhcHNlZDogIXByb3BzLm5vZGUuZGF0YS5nZXQoJ3Nob3J0Y29kZU5ldycpLFxuICAgIH07XG4gIH1cblxuICBoYW5kbGVDaGFuZ2UgPSAoZmllbGROYW1lLCB2YWx1ZSkgPT4ge1xuICAgIGNvbnN0IHsgZWRpdG9yLCBub2RlIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHNob3J0Y29kZURhdGEgPSBNYXAobm9kZS5kYXRhLmdldCgnc2hvcnRjb2RlRGF0YScpKS5zZXQoZmllbGROYW1lLCB2YWx1ZSk7XG4gICAgY29uc3QgZGF0YSA9IG5vZGUuZGF0YS5zZXQoJ3Nob3J0Y29kZURhdGEnLCBzaG9ydGNvZGVEYXRhKTtcbiAgICBlZGl0b3IuY2hhbmdlKGMgPT4gYy5zZXROb2RlQnlLZXkobm9kZS5rZXksIHsgZGF0YSB9KSk7XG4gIH07XG5cbiAgaGFuZGxlQ29sbGFwc2VUb2dnbGUgPSAoKSA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGNvbGxhcHNlZDogIXRoaXMuc3RhdGUuY29sbGFwc2VkIH0pO1xuICB9O1xuXG4gIGhhbmRsZVJlbW92ZSA9ICgpID0+IHtcbiAgICBjb25zdCB7IGVkaXRvciwgbm9kZSB9ID0gdGhpcy5wcm9wcztcbiAgICBlZGl0b3IuY2hhbmdlKGNoYW5nZSA9PiB7XG4gICAgICBjaGFuZ2UucmVtb3ZlTm9kZUJ5S2V5KG5vZGUua2V5KS5mb2N1cygpO1xuICAgIH0pO1xuICB9O1xuXG4gIGhhbmRsZUNsaWNrID0gZXZlbnQgPT4ge1xuICAgIC8qKlxuICAgICAqIFN0b3AgY2xpY2sgZnJvbSBwcm9wYWdhdGluZyB0byBlZGl0b3IsIG90aGVyd2lzZSBmb2N1cyB3aWxsIGJlIHBhc3NlZFxuICAgICAqIHRvIHRoZSBlZGl0b3IuXG4gICAgICovXG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICAvKipcbiAgICAgKiBJZiBjb2xsYXBzZWQsIGFueSBjbGljayBzaG91bGQgb3BlbiB0aGUgZm9ybS5cbiAgICAgKi9cbiAgICBpZiAodGhpcy5zdGF0ZS5jb2xsYXBzZWQpIHtcbiAgICAgIHRoaXMuaGFuZGxlQ29sbGFwc2VUb2dnbGUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmVuZGVyQ29udHJvbCA9IChzaG9ydGNvZGVEYXRhLCBmaWVsZCkgPT4ge1xuICAgIGlmIChmaWVsZC5nZXQoJ3dpZGdldCcpID09PSAnaGlkZGVuJykgcmV0dXJuIG51bGw7XG4gICAgY29uc3QgdmFsdWUgPSBzaG9ydGNvZGVEYXRhLmdldChmaWVsZC5nZXQoJ25hbWUnKSk7XG4gICAgY29uc3Qga2V5ID0gYGZpZWxkLSR7ZmllbGQuZ2V0KCduYW1lJyl9YDtcbiAgICBjb25zdCBDb250cm9sID0gZ2V0RWRpdG9yQ29udHJvbCgpO1xuICAgIGNvbnN0IGNvbnRyb2xQcm9wcyA9IHsgZmllbGQsIHZhbHVlLCBvbkNoYW5nZTogdGhpcy5oYW5kbGVDaGFuZ2UgfTtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGtleT17a2V5fT5cbiAgICAgICAgPENvbnRyb2wgey4uLmNvbnRyb2xQcm9wc30gLz5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgYXR0cmlidXRlcywgbm9kZSB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IGNvbGxhcHNlZCB9ID0gdGhpcy5zdGF0ZTtcbiAgICBjb25zdCBwbHVnaW5JZCA9IG5vZGUuZGF0YS5nZXQoJ3Nob3J0Y29kZScpO1xuICAgIGNvbnN0IHNob3J0Y29kZURhdGEgPSBNYXAodGhpcy5wcm9wcy5ub2RlLmRhdGEuZ2V0KCdzaG9ydGNvZGVEYXRhJykpO1xuICAgIGNvbnN0IHBsdWdpbiA9IGdldEVkaXRvckNvbXBvbmVudHMoKS5nZXQocGx1Z2luSWQpO1xuICAgIHJldHVybiAoXG4gICAgICA8U2hvcnRjb2RlQ29udGFpbmVyIGNvbGxhcHNlZD17Y29sbGFwc2VkfSB7Li4uYXR0cmlidXRlc30gb25DbGljaz17dGhpcy5oYW5kbGVDbGlja30+XG4gICAgICAgIDxTaG9ydGNvZGVUb3BCYXJcbiAgICAgICAgICBjb2xsYXBzZWQ9e2NvbGxhcHNlZH1cbiAgICAgICAgICBvbkNvbGxhcHNlVG9nZ2xlPXt0aGlzLmhhbmRsZUNvbGxhcHNlVG9nZ2xlfVxuICAgICAgICAgIG9uUmVtb3ZlPXt0aGlzLmhhbmRsZVJlbW92ZX1cbiAgICAgICAgLz5cbiAgICAgICAge2NvbGxhcHNlZCA/IChcbiAgICAgICAgICA8U2hvcnRjb2RlVGl0bGU+e2NhcGl0YWxpemUocGx1Z2luSWQpfTwvU2hvcnRjb2RlVGl0bGU+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgcGx1Z2luLmdldCgnZmllbGRzJykubWFwKHBhcnRpYWwodGhpcy5yZW5kZXJDb250cm9sLCBzaG9ydGNvZGVEYXRhKSlcbiAgICAgICAgKX1cbiAgICAgIDwvU2hvcnRjb2RlQ29udGFpbmVyPlxuICAgICk7XG4gIH1cbn1cbiJdfQ== */")), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9NYXJrZG93bkNvbnRyb2wvU2hvcnRjb2RlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVVxQyIsImZpbGUiOiIuLi8uLi8uLi9zcmMvTWFya2Rvd25Db250cm9sL1Nob3J0Y29kZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIHJlYWN0L3Byb3AtdHlwZXMgKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IE1hcCB9IGZyb20gJ2ltbXV0YWJsZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCB7IHBhcnRpYWwsIGNhcGl0YWxpemUgfSBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgTGlzdEl0ZW1Ub3BCYXIsIGNvbXBvbmVudHMsIGNvbG9ycywgbGVuZ3RocyB9IGZyb20gJ25ldGxpZnktY21zLXVpLWRlZmF1bHQnO1xuaW1wb3J0IHsgZ2V0RWRpdG9yQ29udHJvbCwgZ2V0RWRpdG9yQ29tcG9uZW50cyB9IGZyb20gJy4vaW5kZXgnO1xuXG5jb25zdCBTaG9ydGNvZGVDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAke2NvbXBvbmVudHMub2JqZWN0V2lkZ2V0VG9wQmFyQ29udGFpbmVyfTtcbiAgYm9yZGVyLXJhZGl1czogJHtsZW5ndGhzLmJvcmRlclJhZGl1c307XG4gIGJvcmRlcjogMnB4IHNvbGlkICR7Y29sb3JzLnRleHRGaWVsZEJvcmRlcn07XG4gIG1hcmdpbjogMTJweCAwO1xuICBwYWRkaW5nOiAxNHB4O1xuXG4gICR7cHJvcHMgPT5cbiAgICBwcm9wcy5jb2xsYXBzZWQgJiZcbiAgICBjc3NgXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy50ZXh0RmllbGRCb3JkZXJ9O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGB9O1xuYDtcblxuY29uc3QgU2hvcnRjb2RlVG9wQmFyID0gc3R5bGVkKExpc3RJdGVtVG9wQmFyKWBcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMudGV4dEZpZWxkQm9yZGVyfTtcbiAgbWFyZ2luOiAtMTRweCAtMTRweCAwO1xuICBib3JkZXItcmFkaXVzOiAwO1xuYDtcblxuY29uc3QgU2hvcnRjb2RlVGl0bGUgPSBzdHlsZWQuZGl2YFxuICBwYWRkaW5nOiA4cHg7XG4gIGNvbG9yOiAke2NvbG9ycy5jb250cm9sTGFiZWx9O1xuYDtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2hvcnRjb2RlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIC8qKlxuICAgICAgICogVGhlIGBzaG9ydGNvZGVOZXdgIHByb3AgaXMgc2V0IHRvIGB0cnVlYCB3aGVuIGNyZWF0aW5nIGEgbmV3IFNob3J0Y29kZSxcbiAgICAgICAqIHNvIHRoYXQgdGhlIGZvcm0gaXMgaW1tZWRpYXRlbHkgb3BlbiBmb3IgZWRpdGluZy4gT3RoZXJ3aXNlIGFsbFxuICAgICAgICogc2hvcnRjb2RlcyBhcmUgY29sbGFwc2VkIGJ5IGRlZmF1bHQuXG4gICAgICAgKi9cbiAgICAgIGNvbGxhcHNlZDogIXByb3BzLm5vZGUuZGF0YS5nZXQoJ3Nob3J0Y29kZU5ldycpLFxuICAgIH07XG4gIH1cblxuICBoYW5kbGVDaGFuZ2UgPSAoZmllbGROYW1lLCB2YWx1ZSkgPT4ge1xuICAgIGNvbnN0IHsgZWRpdG9yLCBub2RlIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHNob3J0Y29kZURhdGEgPSBNYXAobm9kZS5kYXRhLmdldCgnc2hvcnRjb2RlRGF0YScpKS5zZXQoZmllbGROYW1lLCB2YWx1ZSk7XG4gICAgY29uc3QgZGF0YSA9IG5vZGUuZGF0YS5zZXQoJ3Nob3J0Y29kZURhdGEnLCBzaG9ydGNvZGVEYXRhKTtcbiAgICBlZGl0b3IuY2hhbmdlKGMgPT4gYy5zZXROb2RlQnlLZXkobm9kZS5rZXksIHsgZGF0YSB9KSk7XG4gIH07XG5cbiAgaGFuZGxlQ29sbGFwc2VUb2dnbGUgPSAoKSA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGNvbGxhcHNlZDogIXRoaXMuc3RhdGUuY29sbGFwc2VkIH0pO1xuICB9O1xuXG4gIGhhbmRsZVJlbW92ZSA9ICgpID0+IHtcbiAgICBjb25zdCB7IGVkaXRvciwgbm9kZSB9ID0gdGhpcy5wcm9wcztcbiAgICBlZGl0b3IuY2hhbmdlKGNoYW5nZSA9PiB7XG4gICAgICBjaGFuZ2UucmVtb3ZlTm9kZUJ5S2V5KG5vZGUua2V5KS5mb2N1cygpO1xuICAgIH0pO1xuICB9O1xuXG4gIGhhbmRsZUNsaWNrID0gZXZlbnQgPT4ge1xuICAgIC8qKlxuICAgICAqIFN0b3AgY2xpY2sgZnJvbSBwcm9wYWdhdGluZyB0byBlZGl0b3IsIG90aGVyd2lzZSBmb2N1cyB3aWxsIGJlIHBhc3NlZFxuICAgICAqIHRvIHRoZSBlZGl0b3IuXG4gICAgICovXG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICAvKipcbiAgICAgKiBJZiBjb2xsYXBzZWQsIGFueSBjbGljayBzaG91bGQgb3BlbiB0aGUgZm9ybS5cbiAgICAgKi9cbiAgICBpZiAodGhpcy5zdGF0ZS5jb2xsYXBzZWQpIHtcbiAgICAgIHRoaXMuaGFuZGxlQ29sbGFwc2VUb2dnbGUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmVuZGVyQ29udHJvbCA9IChzaG9ydGNvZGVEYXRhLCBmaWVsZCkgPT4ge1xuICAgIGlmIChmaWVsZC5nZXQoJ3dpZGdldCcpID09PSAnaGlkZGVuJykgcmV0dXJuIG51bGw7XG4gICAgY29uc3QgdmFsdWUgPSBzaG9ydGNvZGVEYXRhLmdldChmaWVsZC5nZXQoJ25hbWUnKSk7XG4gICAgY29uc3Qga2V5ID0gYGZpZWxkLSR7ZmllbGQuZ2V0KCduYW1lJyl9YDtcbiAgICBjb25zdCBDb250cm9sID0gZ2V0RWRpdG9yQ29udHJvbCgpO1xuICAgIGNvbnN0IGNvbnRyb2xQcm9wcyA9IHsgZmllbGQsIHZhbHVlLCBvbkNoYW5nZTogdGhpcy5oYW5kbGVDaGFuZ2UgfTtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGtleT17a2V5fT5cbiAgICAgICAgPENvbnRyb2wgey4uLmNvbnRyb2xQcm9wc30gLz5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgYXR0cmlidXRlcywgbm9kZSB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IGNvbGxhcHNlZCB9ID0gdGhpcy5zdGF0ZTtcbiAgICBjb25zdCBwbHVnaW5JZCA9IG5vZGUuZGF0YS5nZXQoJ3Nob3J0Y29kZScpO1xuICAgIGNvbnN0IHNob3J0Y29kZURhdGEgPSBNYXAodGhpcy5wcm9wcy5ub2RlLmRhdGEuZ2V0KCdzaG9ydGNvZGVEYXRhJykpO1xuICAgIGNvbnN0IHBsdWdpbiA9IGdldEVkaXRvckNvbXBvbmVudHMoKS5nZXQocGx1Z2luSWQpO1xuICAgIHJldHVybiAoXG4gICAgICA8U2hvcnRjb2RlQ29udGFpbmVyIGNvbGxhcHNlZD17Y29sbGFwc2VkfSB7Li4uYXR0cmlidXRlc30gb25DbGljaz17dGhpcy5oYW5kbGVDbGlja30+XG4gICAgICAgIDxTaG9ydGNvZGVUb3BCYXJcbiAgICAgICAgICBjb2xsYXBzZWQ9e2NvbGxhcHNlZH1cbiAgICAgICAgICBvbkNvbGxhcHNlVG9nZ2xlPXt0aGlzLmhhbmRsZUNvbGxhcHNlVG9nZ2xlfVxuICAgICAgICAgIG9uUmVtb3ZlPXt0aGlzLmhhbmRsZVJlbW92ZX1cbiAgICAgICAgLz5cbiAgICAgICAge2NvbGxhcHNlZCA/IChcbiAgICAgICAgICA8U2hvcnRjb2RlVGl0bGU+e2NhcGl0YWxpemUocGx1Z2luSWQpfTwvU2hvcnRjb2RlVGl0bGU+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgcGx1Z2luLmdldCgnZmllbGRzJykubWFwKHBhcnRpYWwodGhpcy5yZW5kZXJDb250cm9sLCBzaG9ydGNvZGVEYXRhKSlcbiAgICAgICAgKX1cbiAgICAgIDwvU2hvcnRjb2RlQ29udGFpbmVyPlxuICAgICk7XG4gIH1cbn1cbiJdfQ== */"));
const ShortcodeTopBar = (
/*#__PURE__*/
0, _styledBase.default)(_netlifyCmsUiDefault.ListItemTopBar, {
  target: "e1994u071",
  label: "ShortcodeTopBar"
})("background-color:", _netlifyCmsUiDefault.colors.textFieldBorder, ";margin:-14px -14px 0;border-radius:0;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9NYXJrZG93bkNvbnRyb2wvU2hvcnRjb2RlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlCOEMiLCJmaWxlIjoiLi4vLi4vLi4vc3JjL01hcmtkb3duQ29udHJvbC9TaG9ydGNvZGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9wcm9wLXR5cGVzICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBNYXAgfSBmcm9tICdpbW11dGFibGUnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgeyBwYXJ0aWFsLCBjYXBpdGFsaXplIH0gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IExpc3RJdGVtVG9wQmFyLCBjb21wb25lbnRzLCBjb2xvcnMsIGxlbmd0aHMgfSBmcm9tICduZXRsaWZ5LWNtcy11aS1kZWZhdWx0JztcbmltcG9ydCB7IGdldEVkaXRvckNvbnRyb2wsIGdldEVkaXRvckNvbXBvbmVudHMgfSBmcm9tICcuL2luZGV4JztcblxuY29uc3QgU2hvcnRjb2RlQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgJHtjb21wb25lbnRzLm9iamVjdFdpZGdldFRvcEJhckNvbnRhaW5lcn07XG4gIGJvcmRlci1yYWRpdXM6ICR7bGVuZ3Rocy5ib3JkZXJSYWRpdXN9O1xuICBib3JkZXI6IDJweCBzb2xpZCAke2NvbG9ycy50ZXh0RmllbGRCb3JkZXJ9O1xuICBtYXJnaW46IDEycHggMDtcbiAgcGFkZGluZzogMTRweDtcblxuICAke3Byb3BzID0+XG4gICAgcHJvcHMuY29sbGFwc2VkICYmXG4gICAgY3NzYFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMudGV4dEZpZWxkQm9yZGVyfTtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBgfTtcbmA7XG5cbmNvbnN0IFNob3J0Y29kZVRvcEJhciA9IHN0eWxlZChMaXN0SXRlbVRvcEJhcilgXG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzLnRleHRGaWVsZEJvcmRlcn07XG4gIG1hcmdpbjogLTE0cHggLTE0cHggMDtcbiAgYm9yZGVyLXJhZGl1czogMDtcbmA7XG5cbmNvbnN0IFNob3J0Y29kZVRpdGxlID0gc3R5bGVkLmRpdmBcbiAgcGFkZGluZzogOHB4O1xuICBjb2xvcjogJHtjb2xvcnMuY29udHJvbExhYmVsfTtcbmA7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNob3J0Y29kZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAvKipcbiAgICAgICAqIFRoZSBgc2hvcnRjb2RlTmV3YCBwcm9wIGlzIHNldCB0byBgdHJ1ZWAgd2hlbiBjcmVhdGluZyBhIG5ldyBTaG9ydGNvZGUsXG4gICAgICAgKiBzbyB0aGF0IHRoZSBmb3JtIGlzIGltbWVkaWF0ZWx5IG9wZW4gZm9yIGVkaXRpbmcuIE90aGVyd2lzZSBhbGxcbiAgICAgICAqIHNob3J0Y29kZXMgYXJlIGNvbGxhcHNlZCBieSBkZWZhdWx0LlxuICAgICAgICovXG4gICAgICBjb2xsYXBzZWQ6ICFwcm9wcy5ub2RlLmRhdGEuZ2V0KCdzaG9ydGNvZGVOZXcnKSxcbiAgICB9O1xuICB9XG5cbiAgaGFuZGxlQ2hhbmdlID0gKGZpZWxkTmFtZSwgdmFsdWUpID0+IHtcbiAgICBjb25zdCB7IGVkaXRvciwgbm9kZSB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBzaG9ydGNvZGVEYXRhID0gTWFwKG5vZGUuZGF0YS5nZXQoJ3Nob3J0Y29kZURhdGEnKSkuc2V0KGZpZWxkTmFtZSwgdmFsdWUpO1xuICAgIGNvbnN0IGRhdGEgPSBub2RlLmRhdGEuc2V0KCdzaG9ydGNvZGVEYXRhJywgc2hvcnRjb2RlRGF0YSk7XG4gICAgZWRpdG9yLmNoYW5nZShjID0+IGMuc2V0Tm9kZUJ5S2V5KG5vZGUua2V5LCB7IGRhdGEgfSkpO1xuICB9O1xuXG4gIGhhbmRsZUNvbGxhcHNlVG9nZ2xlID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoeyBjb2xsYXBzZWQ6ICF0aGlzLnN0YXRlLmNvbGxhcHNlZCB9KTtcbiAgfTtcblxuICBoYW5kbGVSZW1vdmUgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBlZGl0b3IsIG5vZGUgfSA9IHRoaXMucHJvcHM7XG4gICAgZWRpdG9yLmNoYW5nZShjaGFuZ2UgPT4ge1xuICAgICAgY2hhbmdlLnJlbW92ZU5vZGVCeUtleShub2RlLmtleSkuZm9jdXMoKTtcbiAgICB9KTtcbiAgfTtcblxuICBoYW5kbGVDbGljayA9IGV2ZW50ID0+IHtcbiAgICAvKipcbiAgICAgKiBTdG9wIGNsaWNrIGZyb20gcHJvcGFnYXRpbmcgdG8gZWRpdG9yLCBvdGhlcndpc2UgZm9jdXMgd2lsbCBiZSBwYXNzZWRcbiAgICAgKiB0byB0aGUgZWRpdG9yLlxuICAgICAqL1xuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgLyoqXG4gICAgICogSWYgY29sbGFwc2VkLCBhbnkgY2xpY2sgc2hvdWxkIG9wZW4gdGhlIGZvcm0uXG4gICAgICovXG4gICAgaWYgKHRoaXMuc3RhdGUuY29sbGFwc2VkKSB7XG4gICAgICB0aGlzLmhhbmRsZUNvbGxhcHNlVG9nZ2xlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJlbmRlckNvbnRyb2wgPSAoc2hvcnRjb2RlRGF0YSwgZmllbGQpID0+IHtcbiAgICBpZiAoZmllbGQuZ2V0KCd3aWRnZXQnKSA9PT0gJ2hpZGRlbicpIHJldHVybiBudWxsO1xuICAgIGNvbnN0IHZhbHVlID0gc2hvcnRjb2RlRGF0YS5nZXQoZmllbGQuZ2V0KCduYW1lJykpO1xuICAgIGNvbnN0IGtleSA9IGBmaWVsZC0ke2ZpZWxkLmdldCgnbmFtZScpfWA7XG4gICAgY29uc3QgQ29udHJvbCA9IGdldEVkaXRvckNvbnRyb2woKTtcbiAgICBjb25zdCBjb250cm9sUHJvcHMgPSB7IGZpZWxkLCB2YWx1ZSwgb25DaGFuZ2U6IHRoaXMuaGFuZGxlQ2hhbmdlIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBrZXk9e2tleX0+XG4gICAgICAgIDxDb250cm9sIHsuLi5jb250cm9sUHJvcHN9IC8+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGF0dHJpYnV0ZXMsIG5vZGUgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBjb2xsYXBzZWQgfSA9IHRoaXMuc3RhdGU7XG4gICAgY29uc3QgcGx1Z2luSWQgPSBub2RlLmRhdGEuZ2V0KCdzaG9ydGNvZGUnKTtcbiAgICBjb25zdCBzaG9ydGNvZGVEYXRhID0gTWFwKHRoaXMucHJvcHMubm9kZS5kYXRhLmdldCgnc2hvcnRjb2RlRGF0YScpKTtcbiAgICBjb25zdCBwbHVnaW4gPSBnZXRFZGl0b3JDb21wb25lbnRzKCkuZ2V0KHBsdWdpbklkKTtcbiAgICByZXR1cm4gKFxuICAgICAgPFNob3J0Y29kZUNvbnRhaW5lciBjb2xsYXBzZWQ9e2NvbGxhcHNlZH0gey4uLmF0dHJpYnV0ZXN9IG9uQ2xpY2s9e3RoaXMuaGFuZGxlQ2xpY2t9PlxuICAgICAgICA8U2hvcnRjb2RlVG9wQmFyXG4gICAgICAgICAgY29sbGFwc2VkPXtjb2xsYXBzZWR9XG4gICAgICAgICAgb25Db2xsYXBzZVRvZ2dsZT17dGhpcy5oYW5kbGVDb2xsYXBzZVRvZ2dsZX1cbiAgICAgICAgICBvblJlbW92ZT17dGhpcy5oYW5kbGVSZW1vdmV9XG4gICAgICAgIC8+XG4gICAgICAgIHtjb2xsYXBzZWQgPyAoXG4gICAgICAgICAgPFNob3J0Y29kZVRpdGxlPntjYXBpdGFsaXplKHBsdWdpbklkKX08L1Nob3J0Y29kZVRpdGxlPlxuICAgICAgICApIDogKFxuICAgICAgICAgIHBsdWdpbi5nZXQoJ2ZpZWxkcycpLm1hcChwYXJ0aWFsKHRoaXMucmVuZGVyQ29udHJvbCwgc2hvcnRjb2RlRGF0YSkpXG4gICAgICAgICl9XG4gICAgICA8L1Nob3J0Y29kZUNvbnRhaW5lcj5cbiAgICApO1xuICB9XG59XG4iXX0= */"));
const ShortcodeTitle = (0, _styledBase.default)("div", {
  target: "e1994u072",
  label: "ShortcodeTitle"
})("padding:8px;color:", _netlifyCmsUiDefault.colors.controlLabel, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9NYXJrZG93bkNvbnRyb2wvU2hvcnRjb2RlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStCaUMiLCJmaWxlIjoiLi4vLi4vLi4vc3JjL01hcmtkb3duQ29udHJvbC9TaG9ydGNvZGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9wcm9wLXR5cGVzICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBNYXAgfSBmcm9tICdpbW11dGFibGUnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgeyBwYXJ0aWFsLCBjYXBpdGFsaXplIH0gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IExpc3RJdGVtVG9wQmFyLCBjb21wb25lbnRzLCBjb2xvcnMsIGxlbmd0aHMgfSBmcm9tICduZXRsaWZ5LWNtcy11aS1kZWZhdWx0JztcbmltcG9ydCB7IGdldEVkaXRvckNvbnRyb2wsIGdldEVkaXRvckNvbXBvbmVudHMgfSBmcm9tICcuL2luZGV4JztcblxuY29uc3QgU2hvcnRjb2RlQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgJHtjb21wb25lbnRzLm9iamVjdFdpZGdldFRvcEJhckNvbnRhaW5lcn07XG4gIGJvcmRlci1yYWRpdXM6ICR7bGVuZ3Rocy5ib3JkZXJSYWRpdXN9O1xuICBib3JkZXI6IDJweCBzb2xpZCAke2NvbG9ycy50ZXh0RmllbGRCb3JkZXJ9O1xuICBtYXJnaW46IDEycHggMDtcbiAgcGFkZGluZzogMTRweDtcblxuICAke3Byb3BzID0+XG4gICAgcHJvcHMuY29sbGFwc2VkICYmXG4gICAgY3NzYFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMudGV4dEZpZWxkQm9yZGVyfTtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBgfTtcbmA7XG5cbmNvbnN0IFNob3J0Y29kZVRvcEJhciA9IHN0eWxlZChMaXN0SXRlbVRvcEJhcilgXG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzLnRleHRGaWVsZEJvcmRlcn07XG4gIG1hcmdpbjogLTE0cHggLTE0cHggMDtcbiAgYm9yZGVyLXJhZGl1czogMDtcbmA7XG5cbmNvbnN0IFNob3J0Y29kZVRpdGxlID0gc3R5bGVkLmRpdmBcbiAgcGFkZGluZzogOHB4O1xuICBjb2xvcjogJHtjb2xvcnMuY29udHJvbExhYmVsfTtcbmA7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNob3J0Y29kZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAvKipcbiAgICAgICAqIFRoZSBgc2hvcnRjb2RlTmV3YCBwcm9wIGlzIHNldCB0byBgdHJ1ZWAgd2hlbiBjcmVhdGluZyBhIG5ldyBTaG9ydGNvZGUsXG4gICAgICAgKiBzbyB0aGF0IHRoZSBmb3JtIGlzIGltbWVkaWF0ZWx5IG9wZW4gZm9yIGVkaXRpbmcuIE90aGVyd2lzZSBhbGxcbiAgICAgICAqIHNob3J0Y29kZXMgYXJlIGNvbGxhcHNlZCBieSBkZWZhdWx0LlxuICAgICAgICovXG4gICAgICBjb2xsYXBzZWQ6ICFwcm9wcy5ub2RlLmRhdGEuZ2V0KCdzaG9ydGNvZGVOZXcnKSxcbiAgICB9O1xuICB9XG5cbiAgaGFuZGxlQ2hhbmdlID0gKGZpZWxkTmFtZSwgdmFsdWUpID0+IHtcbiAgICBjb25zdCB7IGVkaXRvciwgbm9kZSB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBzaG9ydGNvZGVEYXRhID0gTWFwKG5vZGUuZGF0YS5nZXQoJ3Nob3J0Y29kZURhdGEnKSkuc2V0KGZpZWxkTmFtZSwgdmFsdWUpO1xuICAgIGNvbnN0IGRhdGEgPSBub2RlLmRhdGEuc2V0KCdzaG9ydGNvZGVEYXRhJywgc2hvcnRjb2RlRGF0YSk7XG4gICAgZWRpdG9yLmNoYW5nZShjID0+IGMuc2V0Tm9kZUJ5S2V5KG5vZGUua2V5LCB7IGRhdGEgfSkpO1xuICB9O1xuXG4gIGhhbmRsZUNvbGxhcHNlVG9nZ2xlID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoeyBjb2xsYXBzZWQ6ICF0aGlzLnN0YXRlLmNvbGxhcHNlZCB9KTtcbiAgfTtcblxuICBoYW5kbGVSZW1vdmUgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBlZGl0b3IsIG5vZGUgfSA9IHRoaXMucHJvcHM7XG4gICAgZWRpdG9yLmNoYW5nZShjaGFuZ2UgPT4ge1xuICAgICAgY2hhbmdlLnJlbW92ZU5vZGVCeUtleShub2RlLmtleSkuZm9jdXMoKTtcbiAgICB9KTtcbiAgfTtcblxuICBoYW5kbGVDbGljayA9IGV2ZW50ID0+IHtcbiAgICAvKipcbiAgICAgKiBTdG9wIGNsaWNrIGZyb20gcHJvcGFnYXRpbmcgdG8gZWRpdG9yLCBvdGhlcndpc2UgZm9jdXMgd2lsbCBiZSBwYXNzZWRcbiAgICAgKiB0byB0aGUgZWRpdG9yLlxuICAgICAqL1xuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgLyoqXG4gICAgICogSWYgY29sbGFwc2VkLCBhbnkgY2xpY2sgc2hvdWxkIG9wZW4gdGhlIGZvcm0uXG4gICAgICovXG4gICAgaWYgKHRoaXMuc3RhdGUuY29sbGFwc2VkKSB7XG4gICAgICB0aGlzLmhhbmRsZUNvbGxhcHNlVG9nZ2xlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJlbmRlckNvbnRyb2wgPSAoc2hvcnRjb2RlRGF0YSwgZmllbGQpID0+IHtcbiAgICBpZiAoZmllbGQuZ2V0KCd3aWRnZXQnKSA9PT0gJ2hpZGRlbicpIHJldHVybiBudWxsO1xuICAgIGNvbnN0IHZhbHVlID0gc2hvcnRjb2RlRGF0YS5nZXQoZmllbGQuZ2V0KCduYW1lJykpO1xuICAgIGNvbnN0IGtleSA9IGBmaWVsZC0ke2ZpZWxkLmdldCgnbmFtZScpfWA7XG4gICAgY29uc3QgQ29udHJvbCA9IGdldEVkaXRvckNvbnRyb2woKTtcbiAgICBjb25zdCBjb250cm9sUHJvcHMgPSB7IGZpZWxkLCB2YWx1ZSwgb25DaGFuZ2U6IHRoaXMuaGFuZGxlQ2hhbmdlIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBrZXk9e2tleX0+XG4gICAgICAgIDxDb250cm9sIHsuLi5jb250cm9sUHJvcHN9IC8+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGF0dHJpYnV0ZXMsIG5vZGUgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBjb2xsYXBzZWQgfSA9IHRoaXMuc3RhdGU7XG4gICAgY29uc3QgcGx1Z2luSWQgPSBub2RlLmRhdGEuZ2V0KCdzaG9ydGNvZGUnKTtcbiAgICBjb25zdCBzaG9ydGNvZGVEYXRhID0gTWFwKHRoaXMucHJvcHMubm9kZS5kYXRhLmdldCgnc2hvcnRjb2RlRGF0YScpKTtcbiAgICBjb25zdCBwbHVnaW4gPSBnZXRFZGl0b3JDb21wb25lbnRzKCkuZ2V0KHBsdWdpbklkKTtcbiAgICByZXR1cm4gKFxuICAgICAgPFNob3J0Y29kZUNvbnRhaW5lciBjb2xsYXBzZWQ9e2NvbGxhcHNlZH0gey4uLmF0dHJpYnV0ZXN9IG9uQ2xpY2s9e3RoaXMuaGFuZGxlQ2xpY2t9PlxuICAgICAgICA8U2hvcnRjb2RlVG9wQmFyXG4gICAgICAgICAgY29sbGFwc2VkPXtjb2xsYXBzZWR9XG4gICAgICAgICAgb25Db2xsYXBzZVRvZ2dsZT17dGhpcy5oYW5kbGVDb2xsYXBzZVRvZ2dsZX1cbiAgICAgICAgICBvblJlbW92ZT17dGhpcy5oYW5kbGVSZW1vdmV9XG4gICAgICAgIC8+XG4gICAgICAgIHtjb2xsYXBzZWQgPyAoXG4gICAgICAgICAgPFNob3J0Y29kZVRpdGxlPntjYXBpdGFsaXplKHBsdWdpbklkKX08L1Nob3J0Y29kZVRpdGxlPlxuICAgICAgICApIDogKFxuICAgICAgICAgIHBsdWdpbi5nZXQoJ2ZpZWxkcycpLm1hcChwYXJ0aWFsKHRoaXMucmVuZGVyQ29udHJvbCwgc2hvcnRjb2RlRGF0YSkpXG4gICAgICAgICl9XG4gICAgICA8L1Nob3J0Y29kZUNvbnRhaW5lcj5cbiAgICApO1xuICB9XG59XG4iXX0= */"));

class Shortcode extends _react.default.Component {
  constructor(props) {
    super(props);

    _defineProperty(this, "handleChange", (fieldName, value) => {
      const {
        editor,
        node
      } = this.props;
      const shortcodeData = (0, _immutable.Map)(node.data.get('shortcodeData')).set(fieldName, value);
      const data = node.data.set('shortcodeData', shortcodeData);
      editor.change(c => c.setNodeByKey(node.key, {
        data
      }));
    });

    _defineProperty(this, "handleCollapseToggle", () => {
      this.setState({
        collapsed: !this.state.collapsed
      });
    });

    _defineProperty(this, "handleRemove", () => {
      const {
        editor,
        node
      } = this.props;
      editor.change(change => {
        change.removeNodeByKey(node.key).focus();
      });
    });

    _defineProperty(this, "handleClick", event => {
      /**
       * Stop click from propagating to editor, otherwise focus will be passed
       * to the editor.
       */
      event.stopPropagation();
      /**
       * If collapsed, any click should open the form.
       */

      if (this.state.collapsed) {
        this.handleCollapseToggle();
      }
    });

    _defineProperty(this, "renderControl", (shortcodeData, field) => {
      if (field.get('widget') === 'hidden') return null;
      const value = shortcodeData.get(field.get('name'));
      const key = "field-".concat(field.get('name'));
      const Control = (0, _index.getEditorControl)();
      const controlProps = {
        field,
        value,
        onChange: this.handleChange
      };
      return _react.default.createElement("div", {
        key: key
      }, _react.default.createElement(Control, controlProps));
    });

    this.state = {
      /**
       * The `shortcodeNew` prop is set to `true` when creating a new Shortcode,
       * so that the form is immediately open for editing. Otherwise all
       * shortcodes are collapsed by default.
       */
      collapsed: !props.node.data.get('shortcodeNew')
    };
  }

  render() {
    const {
      attributes,
      node
    } = this.props;
    const {
      collapsed
    } = this.state;
    const pluginId = node.data.get('shortcode');
    const shortcodeData = (0, _immutable.Map)(this.props.node.data.get('shortcodeData'));
    const plugin = (0, _index.getEditorComponents)().get(pluginId);
    return _react.default.createElement(ShortcodeContainer, _extends({
      collapsed: collapsed
    }, attributes, {
      onClick: this.handleClick
    }), _react.default.createElement(ShortcodeTopBar, {
      collapsed: collapsed,
      onCollapseToggle: this.handleCollapseToggle,
      onRemove: this.handleRemove
    }), collapsed ? _react.default.createElement(ShortcodeTitle, null, (0, _capitalize2.default)(pluginId)) : plugin.get('fields').map((0, _partial2.default)(this.renderControl, shortcodeData)));
  }

}

exports.default = Shortcode;